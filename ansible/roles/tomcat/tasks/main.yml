---
- name: Create Tomcat group
  group:
    name: "{{ tomcat_group }}"
    system: yes
    state: present

- name: Create Tomcat user
  user:
    name: "{{ tomcat_user }}"
    group: "{{ tomcat_group }}"
    home: "{{ tomcat_home }}"
    shell: /bin/false
    system: yes
    state: present

- name: Create Tomcat directory
  file:
    path: "{{ tomcat_home }}"
    state: directory
    owner: "{{ tomcat_user }}"
    group: "{{ tomcat_group }}"
    mode: '0755'

- name: Download Tomcat
  get_url:
    url: "https://archive.apache.org/dist/tomcat/tomcat-10/v{{ tomcat_version }}/bin/apache-tomcat-{{ tomcat_version }}.tar.gz"
    dest: "/tmp/apache-tomcat-{{ tomcat_version }}.tar.gz"
    mode: '0644'

- name: Extract Tomcat
  unarchive:
    src: "/tmp/apache-tomcat-{{ tomcat_version }}.tar.gz"
    dest: "{{ tomcat_home }}"
    remote_src: yes
    owner: "{{ tomcat_user }}"
    group: "{{ tomcat_group }}"
    extra_opts: [--strip-components=1]
    creates: "{{ tomcat_home }}/bin/catalina.sh"

- name: Set ownership of Tomcat files
  file:
    path: "{{ tomcat_home }}"
    owner: "{{ tomcat_user }}"
    group: "{{ tomcat_group }}"
    recurse: yes

- name: Make scripts executable
  file:
    path: "{{ tomcat_home }}/bin/{{ item }}"
    mode: '0755'
  with_items:
    - catalina.sh
    - ciphers.sh
    - configtest.sh
    - daemon.sh
    - digest.sh
    - setclasspath.sh
    - shutdown.sh
    - startup.sh
    - tool-wrapper.sh
    - version.sh

- name: Create setenv.sh for Tomcat environment variables
  template:
    src: setenv.sh.j2
    dest: "{{ tomcat_home }}/bin/setenv.sh"
    owner: "{{ tomcat_user }}"
    group: "{{ tomcat_group }}"
    mode: '0755'

- name: Configure Tomcat server.xml
  template:
    src: server.xml.j2
    dest: "{{ tomcat_home }}/conf/server.xml"
    owner: "{{ tomcat_user }}"
    group: "{{ tomcat_group }}"
    mode: '0600'
    backup: yes
  notify: restart tomcat

- name: Configure Tomcat context.xml
  template:
    src: context.xml.j2
    dest: "{{ tomcat_home }}/conf/context.xml"
    owner: "{{ tomcat_user }}"
    group: "{{ tomcat_group }}"
    mode: '0600'
    backup: yes
  notify: restart tomcat

- name: Create Tomcat systemd service file
  template:
    src: tomcat.service.j2
    dest: /etc/systemd/system/tomcat.service
    owner: root
    group: root
    mode: '0644'
  notify: reload systemd

- name: Remove default webapps
  file:
    path: "{{ tomcat_home }}/webapps/{{ item }}"
    state: absent
  with_items:
    - ROOT
    - docs
    - examples
    - host-manager
    - manager

- name: Create webapps directory if it doesn't exist
  file:
    path: "{{ tomcat_home }}/webapps"
    state: directory
    owner: "{{ tomcat_user }}"
    group: "{{ tomcat_group }}"
    mode: '0755'

- name: Start and enable Tomcat service
  systemd:
    name: tomcat
    state: started
    enabled: yes
    daemon_reload: yes

- name: Wait for Tomcat to be ready
  wait_for:
    port: "{{ tomcat_port }}"
    delay: 10
    timeout: 60

- name: Ensure handlers are flushed
  meta: flush_handlers