---
- name: Install PostgreSQL dependencies
  apt:
    name:
      - ca-certificates
      - postgresql-common
      - apt-transport-https
      - lsb-release
      - wget
    state: present
    update_cache: yes

- name: Add PostgreSQL APT repository key
  apt_key:
    url: https://www.postgresql.org/media/keys/ACCC4CF8.asc
    state: present

- name: Add PostgreSQL APT repository
  apt_repository:
    repo: "deb http://apt.postgresql.org/pub/repos/apt {{ ansible_lsb.codename }}-pgdg main"
    state: present
    update_cache: yes

- name: Install PostgreSQL {{ postgres_version }}
  apt:
    name:
      - "postgresql-{{ postgres_version }}"
      - "postgresql-client-{{ postgres_version }}"
      - "postgresql-contrib-{{ postgres_version }}"
      - python3-psycopg2
    state: present

- name: Ensure PostgreSQL is running
  systemd:
    name: postgresql
    state: started
    enabled: yes

- name: Create DSpace database user
  postgresql_user:
    name: "{{ postgres_user }}"
    password: "{{ postgres_password }}"
    state: present
    login_unix_socket: /var/run/postgresql
  become: yes
  become_user: postgres
  become_method: sudo

- name: Create DSpace database
  postgresql_db:
    name: "{{ postgres_db }}"
    owner: "{{ postgres_user }}"
    encoding: UTF8
    lc_collate: en_US.UTF-8
    lc_ctype: en_US.UTF-8
    template: template0
    state: present
    login_unix_socket: /var/run/postgresql
  become: yes
  become_user: postgres
  become_method: sudo

- name: Grant all privileges to DSpace user on DSpace database
  postgresql_privs:
    db: "{{ postgres_db }}"
    privs: ALL
    type: database
    role: "{{ postgres_user }}"
    state: present
    login_unix_socket: /var/run/postgresql
  become: yes
  become_user: postgres
  become_method: sudo

- name: Configure PostgreSQL to accept connections
  lineinfile:
    path: "/etc/postgresql/{{ postgres_version }}/main/postgresql.conf"
    regexp: "^#?listen_addresses"
    line: "listen_addresses = 'localhost'"
    state: present
  notify: restart postgresql

- name: Configure PostgreSQL authentication
  template:
    src: pg_hba.conf.j2
    dest: "/etc/postgresql/{{ postgres_version }}/main/pg_hba.conf"
    owner: postgres
    group: postgres
    mode: '0640'
  notify: restart postgresql

- name: Install pgcrypto extension
  postgresql_ext:
    name: pgcrypto
    db: "{{ postgres_db }}"
    state: present
  become: yes
  become_user: postgres

- name: Create restart postgresql handler
  debug:
    msg: "PostgreSQL configuration completed"

- name: Ensure PostgreSQL is restarted
  meta: flush_handlers